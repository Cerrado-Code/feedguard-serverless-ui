---
service: serverless-react-boilerplate

provider:
  name: aws
  runtime: nodejs8.10
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  memorySize: 512
  timeout: 6
  logRetentionInDays: 7

  environment:
    SERVERLESS_PROJECT: ${self:service}
    SERVERLESS_REGION: ${self:provider.region}
    SERVERLESS_STAGE: ${self:provider.stage}

    APP_DIST_URL:
      Fn::Join:
        - ''
        - - https://s3.amazonaws.com/
          - Ref: DistBucket
    APP_PUBLIC_URL:
      Fn::Join:
        - ''
        - - https://s3.amazonaws.com/
          - Ref: DistBucket
    APIGATEWAY_URL:
      Fn::Join:
        - ''
        - - https://
          - Ref: ApiGatewayRestApi
          - .execute-api.
          - Ref: AWS::Region
          - .amazonaws.com/
          - ${self:provider.stage}

plugins:
  - serverless-webpack
  - serverless-export-env
  - serverless-plugin-scripts
  - serverless-offline
  - serverless-s3-deploy

functions:
  serve:
    # Any web request regardless of path or method will be handled by a single Lambda function
    handler: handler.serve
    events:
      - http:
          path: /
          method: any
          cors: true
      - http:
          path: /{any+}
          method: any
          cors: true

custom:
  scripts:
    hooks:
      # Build the client-side script before packaging backend code
      package:initialize: 'npm run build:client'

  webpack:
    webpackConfig: 'webpack.server.config.js'

  assets:
    # Automatically copy public folder and distribution to S3
    auto: true
    targets:
      - bucket: 
          Ref: DistBucket
        acl: public-read
        files:
          - source: public/
            globs:
              - '**/*'
          - source: dist/
            headers:
              CacheControl: max-age=31104000 # 1 year
            globs:
              - '**/*.js'
              - '**/*.css'
              - '**/*.map'

resources:
  Resources:

    # Customize the API Gateway resource
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        # Enable gzip compression
        MinimumCompressionSize: 1000

    # S3 Bucket for the distribution bundles
    DistBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Delete
      Properties:
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods: 
                - "GET"
              AllowedOrigins:
                - Fn::Join:
                    - ''
                    - - https://
                      - Ref: ApiGatewayRestApi
                      - .execute-api.
                      - Ref: AWS::Region
                      - .amazonaws.com
              MaxAge: 3000

  Outputs:
    ApiGatewayRestApi:
      Description: API Gateway Endpoint
      Value:
        Ref: ApiGatewayRestApi
    DistBucket:
      Description: Distribution S3 Bucket
      Value:
        Ref: DistBucket
